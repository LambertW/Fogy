<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <!-- 定义参数：
   ${basedir}：系统路径
   ${shortdate}：短日期 yyyy-MM-dd(例:2013-01-31)
   ${basedir}/Logs/${shortdate}：即为在系统路径下的Logs文件夹下面的日期文件夹-->
  <variable name="logDirectory" value="${basedir}/Log/${shortdate}"/>
  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
    <!-- 定义输出模板：
        type="File"：这个记录方式为文件类型
        fileName="${logDirectory}/All.log"：表示输出到文件All.log中
        layout="..."：输出文件中错误的显示格式
        ${logDirectory}：为上述定义的路径
        ${longdate}：输出长日期 yyyy-MM-dd HH:mm:ss.ffff(例:2013-01-31 14:49:21.2120)
        ${level}：错误等级(由低到高为Trace，Debug，Info，Warn，Error，Fatal)
        ${newline}：输出 新的一行
        ${stacktrace}：输出 堆栈信息
        ${callsite:className=True:fileName=True:includeSourcePath=True:methodName=True}：输出 命名空间.类名.方法名(文件路径:行号)
        ${message}：输出错误信息-->
      <target name="file" xsi:type="File"
          layout="${newline}date：	${date}${newline}level：	${level}${newline}logger：	${logger}${newline}machinename：	${machinename}
${newline}message：	${message}${newline}appdomain：	${appdomain}${newline}assembly-version：	${assembly-version}${newline}basedir：	${basedir}
${newline}callsite：	${callsite}${newline}callsite-linenumber：	${callsite-linenumber}${newline}counter：	${counter}${newline}nlogdir：	${nlogdir}
${newline}processid：	${processid}${newline}processname：	${processname}${newline}specialfolder：	${specialfolder}
${newline}stacktrace: ${stacktrace}${newline}-----------------------------------------------------------"
          fileName="${logDirectory}/AllLog.txt"
          keepFileOpen="true"
          encoding="utf-8" />
    <!-- 定义输出到MySQL中：
        type="Database"：这个记录方式是数据库
        dbProvider="MySql.Data.MySqlClient"：使用MySQL的连接方式
        connectionString="Server=XXX.XXX.XXX.XXX;Database=ProjectLogDB;Uid=XXX;Pwd=XXX;"：数据库的连接字符串
        commandText="insert into Logs(CreateDate,LogLevel,CallSite,Massage,StackTrace) values (@CreateDate,@LogLevel,@CallSite,@Massage,@StackTrace)"：insert语句
        <parameter name="CreateDate" layout="${longdate}" />对应到insert语句的参数的值-->
    <target xsi:type="Database" name="AllDatabase" dbProvider="MySql.Data.MySqlClient"
                    connectionString="Server=XXX.XXX.XXX.XXX;Database=ProjectLogDB;Uid=XXX;Pwd=XXX;"
                    commandText="insert into Logs(CreateDate,LogLevel,CallSite,Massage,StackTrace) values (@CreateDate,@LogLevel,@CallSite,@Massage,@StackTrace)">
      <parameter name="CreateDate" layout="${longdate}" />
      <parameter name="LogLevel" layout="${level}" />
      <parameter name="CallSite" layout="${callsite:className=True:fileName=True:includeSourcePath=True:methodName=True}" />
      <parameter name="Massage" layout="${message}" />
      <parameter name="StackTrace" layout="${stacktrace}" />
    </target>
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
    <!-- 定义输出日志：
    name="*"：记录所有信息
    minlevel="Trace"：记录的最低错误级别为Trace
    writeTo="File"：日志写入File的target中-->
    <logger name="*" minlevel="Trace" writeTo="File" />
  </rules>
</nlog>
